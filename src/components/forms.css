::placeholder {
  color: var(--color-ink-muted);
  opacity: 1;
  font-style: italic;
}

legend {
  padding: 0;
}

fieldset {
  width: 100%;
  margin: 0;
  padding: 0;
  border: 0;
}

/* Text fields */

input:not([type="submit"], [type="reset"], [type="file"], [type="range"]),
textarea,
select {
  padding-block: var(--spacing-input-block);
  padding-inline: var(--spacing-input-inline);
  border-radius: var(--radius-input);
  border: var(--border-width-input) solid var(--color-separator);
  background-color: var(--color-surface-dim);
}

:where(
    input:not([type="submit"], [type="reset"], [type="file"], [type="range"]),
    textarea,
    select
  ):not([disabled]) {
  &:focus-visible {
    color: var(--color-ink-contrast);
    background-color: var(--color-surface-bright);
  }
  &:hover,
  &:focus-visible {
    border-color: var(--color-separator-highlight);
  }
}

/* Check fields */

input[type="checkbox"],
input[type="radio"] {
  height: 1em;
  width: 1em;
  aspect-ratio: 1;
  vertical-align: middle;
  margin: -0.3ex 0.15em 0 0;
  line-height: inherit;
  appearance: none;
  padding: 0;
  border: var(--border-width-input) solid var(--color-separator);
  background-color: var(--color-surface-dim);
}

input[type="radio"] {
  border-radius: 1e5px;
  &:checked {
    background-color: var(--color-checked);
    border-color: var(--color-accent);
    box-shadow: inset 0 0 0 0.5ex var(--color-accent);
  }
}

input[type="checkbox"]:checked {
  background-color: var(--color-accent);
  background-image: var(--icon-check);
  background-size: contain;
  background-repeat: no-repeat;
  border-color: var(--color-accent);
}

/* Select */

select {
  appearance: none;
  background-image: var(--icon-chevron-down);
  background-repeat: no-repeat;
  background-size: var(--icon-size);
  background-position: calc(100% - var(--spacing-input-block)) 50%;
  padding-inline-end: calc(var(--icon-size) + var(--spacing-input-inline));
  position: relative;
}

select:invalid,
option:disabled {
  color: var(--color-ink-muted);
  font-style: italic;
}

/* Range */
input[type="range"] {
  --_track-height: 0.5rem;
  --_thumb-size: 1.5rem;
  appearance: none;
  background-color: transparent;
  cursor: pointer;
  width: 100%;
}

input[type="range"]::-webkit-slider-runnable-track,
input[type="range"]::-moz-range-track {
  background-color: light-dark(var(--color-gray-4), var(--color-gray-13));
  height: var(--_track-height);
  border-radius: 1e5px;
}

input[type="range"]::-webkit-slider-thumb,
input[type="range"]::-moz-range-thumb {
  appearance: none;
  height: var(--_thumb-size);
  width: var(--_thumb-size);
  background-color: var(--color-accent);
  border: 0;
  border-radius: 1e5px;
}

input[type="range"]::-webkit-slider-thumb {
  margin-block-start: calc(
    (var(--_track-height) / 2) - (var(--_thumb-size) / 2)
  );
}

input[type="range"]:focus-visible {
  outline: unset;
}

input[type="range"]:focus-visible::-webkit-slider-thumb,
input[type="range"]:focus-visible::-moz-range-thumb {
  border: 0;
  outline-width: var(--border-width-focus);
  outline-style: solid;
  outline-color: var(--color-focus-outline);
  outline-offset: var(--border-width-focus);
}

input[type="range"]:focus-within,
input[type="range"]:active {
  &::-webkit-slider-runnable-track,
  &::-moz-range-track {
    transition: all 200ms;
    background-color: light-dark(var(--color-gray-5), var(--color-gray-12));
  }

  &::-webkit-slider-thumb,
  &::-moz-range-thumb {
    transition: all 200ms;
    background-color: var(--color-primary-9);
    transform: scale(1.25);
  }
}

input:is(
    [type="datetime-local" i],
    [type="date" i],
    [type="month" i],
    [type="time" i]
  )::-webkit-calendar-picker-indicator {
  mask-size: 1em auto;
  mask-position: 50% 50%;
  mask-repeat: no-repeat;
  background: currentColor;
}

input:is(
    [type="datetime-local" i],
    [type="date" i],
    [type="month" i]
  )::-webkit-calendar-picker-indicator {
  mask-image: var(--icon-calendar);
}

input[type="time" i]::-webkit-calendar-picker-indicator {
  mask-image: var(--icon-clock);
}

[type="file"]::file-selector-button {
  margin-inline-end: 1em;
}


/* 
* Equalize heights (Safari bug) *
*/

input:is(
    [type="date"],
    [type="datetime-local"],
    [type="time"],
    [type="month"],
    [type="color"]
  ) {
  height: calc(
    (var(--font-size-0) * 1.5) + (var(--spacing-input-block) * 2) +
      (var(--border-width-input) * 2)
  );
}

input[type="color"] {
  inline-size: calc(
    (var(--font-size-0) * 1.5) + (var(--spacing-input-block) * 2) +
      (var(--border-width-input) * 2)
  );
}

input[disabled] {
  opacity: 0.8;
}

/* Match other input heights */

/* button,
input:not(
    [type="date"],
    [type="datetime-local"],
    [type="time"],
    [type="month"],
    [type="checkbox"],
    [type="radio"]
  ) {
  min-height: calc(
    (var(--font-size-0) * 1.5) + (var(--spacing-input-block) * 2) +
      (var(--border-width-input) * 2)
  );
} */

form {
  --_form-label-gap: var(--spacing-4xs);
  --_form-flow: var(--spacing-flow, 1em);
}
form label:has(input:not([type="checkbox"], [type="radio"]), textarea, select) {
  display: flex;
  flex-direction: column;
  gap: var(--_form-label-gap);
  /* button[type="submit"],
  input:not([type="checkbox"], [type="radio"]),
  select,
  textarea {
    inline-size: 100%;
  } */
}

form {
  input:not(
      [type="checkbox"],
      [type="radio"],
      [type="button"],
      [type="submit"],
      [type="reset"],
      [type="file"],
      [type="color"],
    ),
  textarea,
  select {
    inline-size: 100%;
  }
}

form label:has(input:is([type="checkbox"], [type="radio"])) {
  display: block;
}

form > * + *,
form > fieldset:not(:has(legend)) > * + * {
  margin-block-start: var(--_form-flow);
}

form fieldset > legend + * {
  margin-block-start: var(--_form-label-gap);
}

/* Form inputs within div */
form div:has(> label + input) {
  display: flex;
  flex-direction: column;
  gap: var(--_form-label-gap);
}
